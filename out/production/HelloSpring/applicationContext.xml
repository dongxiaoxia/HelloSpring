<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       default-lazy-init="true">
    <description>Spring公共配置</description>



    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="xyz.dongxiaoxia.hellospring">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <context:property-placeholder location="classpath:jdbc.properties"/>


    <!--==========================================Spring Email Integration=====================================================-->
    <!--<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="username" value="01dongxiaoxia@gmail.com" />
        <property name="password" value="dong18604012927." />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
                <prop key="mail.smtp.port">587</prop>
                <prop key="mail.smtp.socketFactory.port">587</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>
            </props>
        </property>
    </bean>-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.qq.com"/>
        <property name="port" value="25"/>
        <property name="username" value="810196858@qq.com"/>
        <property name="password" value="sycysb201314...."/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>
    <!-- this is a template message that we can pre-load with default state -->
    <!-- You can have some pre-configured messagess also which are ready to send -->
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="810196858@qq.com"/>
        <property name="subject" value="Your order"/>
    </bean>
    <bean id="EmailMessage" class="xyz.dongxiaoxia.hellospring.message.EmailMessage">
        <property name="mailSender" ref="mailSender"/>
        <property name="templateMessage" ref="templateMessage"/>
    </bean>
    <bean id="emailMessageWithJavaMailSender"
          class="xyz.dongxiaoxia.hellospring.message.EmailMessageWithJavaMailSender">
        <property name="mailSender" ref="mailSender"/>
    </bean>
    <!--==========================================Spring Email Integration=====================================================-->
    <!--==========================================Spring Task Execution and Scheduling ==========================================-->

    <!--<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
        <!--<property name="corePoolSize" value="5" />-->
        <!--<property name="maxPoolSize" value="10" />-->
        <!--<property name="queueCapacity" value="25" />-->
    <!--</bean>-->
    <!--<bean id="taskExecutorExample" class="xyz.dongxiaoxia.hellospring.task_execition_and_scheduling.TaskExecutorExample">-->
        <!--<constructor-arg ref="taskExecutor" />-->
    <!--</bean>-->
    <task:scheduled-tasks>
        <!--<task:scheduled ref="taskExecutorExample" method="printMessages" cron="0 * * * * ?" />-->
        <task:scheduled ref="job" method="doJob" fixed-delay="1000"/>
    </task:scheduled-tasks>
    <!--<task:executor id="myExecutor" pool-size="5"/>-->

    <bean id="job" class="xyz.dongxiaoxia.hellospring.task_execition_and_scheduling.Job">
    </bean>
    <!--<task:scheduler id="myScheduler" pool-size="10"/>-->
    <!--<task:scheduled-tasks scheduler="myScheduler">-->
        <!--<task:scheduled ref="job" method="doJob" fixed-delay="1"/>-->
    <!--</task:scheduled-tasks>-->

    <!--==========================================Spring Task Execution and Scheduling ==========================================-->

</beans>
